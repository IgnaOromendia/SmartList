TAD Product ES Tupla⟨name: String, amount: Nat, pirce: Nat⟩
TAD List ES Tupla⟨id: String, price: Nat, list: conj(Product)⟩

TAD SmartList
	Igualdad Observacional:();
	Géneros: sl
	Exporta: sl, observadores, generadores, 
	Usa: Bool, Nat
	
	Observadores Básicos:
		buyLists: sl -> conj(list)
		buyList: string id x sl -> list			{id ∈ conj(buyLists(sl)) ∧ id ∉ conj(houseLists(sl))}
		houseLists: string sl -> conj(list)
		houseList: string id x sl -> list		{id ∉ conj(buyLists(sl)) ∧ id ∈ conj(houseLists(sl))}
		price: string id x sl -> list		{id ∈ conj(buyLists(sl)) ∨ id ∈ conj(houseLists(sl))}
	Generadores:
		newSession: -> sl
		addProduct: product p x string id x sl -> sl { id ∈ conj(buyList(sl)) ∨ id ∈ conj(houseLists(sl))}
		buyProduct: product p x string id x sl -> sl { id ∈ conj(buyList(sl)) ∧L p ∈ π3(buyList(id,sl)) }
	Otras Operaciones:
		productInHouse: product p x conj(list) -> bool
	Axiomas:
		buyList(newSession()) ≡ ø
		buyList(id1,addProduct(p,id2,sl)) ≡ if id1 = id2 then Ag else sino fi
		
Fin TAD
